{"version":3,"sources":["../src/schema.js"],"names":["typeDefs","resolvers"],"mappings":";;;;;;;AAAA;;AACA;;AAGA,IAAMA,QAAQ,mlCAAd;;eAkDe,kCAAqB;AAChCA,EAAAA,QAAQ,EAAEA,QADsB;AAEhCC,EAAAA,SAAS,EAAEA;AAFqB,CAArB,C","sourcesContent":["import { makeExecutableSchema } from '@graphql-tools/schema';\r\nimport {resolvers} from './resolvers'\r\n\r\n\r\nconst typeDefs = `\r\n    type Query {\r\n        hello: String\r\n        greet(name: String!): String\r\n        tasks: [Task]\r\n        personas: [Persona]\r\n        personaId(id : Int): [Persona]\r\n    }\r\n\r\n    type Mutation {\r\n        createTask(input: TaskInput): Task\r\n        createPersona(input: PersonaInput): Persona\r\n        updatePersona(id: Int, input: PersonaInput): Persona\r\n        deletePersona(id: Int): String\r\n    }\r\n\r\n    type Persona {\r\n        id: Int\r\n        nombre: String!\r\n        segundo_nombre: String          \r\n        apellido_paterno: String\r\n        apellido_materno: String\r\n        fecha_nacimiento: String\r\n        email: String\r\n        telefono: String\r\n    }\r\n\r\n    input PersonaInput {\r\n        nombre: String!\r\n        segundo_nombre: String          \r\n        apellido_paterno: String!\r\n        apellido_materno: String!\r\n        fecha_nacimiento: String!\r\n        email: String!\r\n        telefono: String!\r\n    }\r\n\r\n    type Task {\r\n        _id: ID\r\n        title: String!\r\n        number: Int\r\n    }\r\n    \r\n    input TaskInput {\r\n        title: String!\r\n        number: Int\r\n    }\r\n\r\n`;\r\n\r\nexport default makeExecutableSchema({\r\n    typeDefs: typeDefs,\r\n    resolvers: resolvers\r\n})"],"file":"schema.js"}